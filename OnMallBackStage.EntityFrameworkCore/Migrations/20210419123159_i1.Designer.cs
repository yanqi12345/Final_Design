// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnMallBackStage.EntityFrameworkCore;
using Volo.Abp.EntityFrameworkCore;

namespace OnMallBackStage.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(OnMallBackStageDbContext))]
    [Migration("20210419123159_i1")]
    partial class i1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.MySql)
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("OnMallBackStage.Domain.ManagerInfo.Manager", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("ManagerNo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ManagerPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("OnMallBackStage.Domain.MerchandiseInfo.Classify", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("ClassDetail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Classifies");
                });

            modelBuilder.Entity("OnMallBackStage.Domain.MerchandiseInfo.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("CommentDetail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Level")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("MerchandiseId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OnMallBackStage.Domain.MerchandiseInfo.Merchandise", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ClassifyId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Introduction")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MerchandiseName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MerchandiseNo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("MerchantId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Picture")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Sum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Merchandises");
                });

            modelBuilder.Entity("OnMallBackStage.Domain.MerchantInfo.Merchant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("MerchantName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MerchantNo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MerchantPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MerchantTel")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Merchants");
                });
#pragma warning restore 612, 618
        }
    }
}
